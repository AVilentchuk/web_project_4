!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function t(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var n=function(){function n(e,r,o){var i=this,a=e.name,u=e.link;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),t(this,"_handleImageClick",(function(e){document.querySelector(".popup__place-name").textContent=i._text,i._galleryWindow=document.querySelector(".popup__img"),i._galleryWindow.src=i._link,i._galleryWindow.alt="Photograph of ".concat(i._text),i.handleClickExtension(e)})),t(this,"_handleDelete",(function(){i._element.remove(),i._element=null})),t(this,"_handleLike",(function(e){e.target.classList.toggle("card__like-button_active")})),t(this,"createCard",(function(){i._element=i._cloneTemplate(),i._assignEventListeners();var e=i._element.querySelector(".card__image");return e.src=i._link,e.alt=i._text,i._element.querySelector(".card__text").textContent=i._text,i._element.querySelector(".card__overflow-tooltip").textContent=i._text,i._element})),this._text=a,this._link=u,this.selectTemplate=r,this.handleClickExtension=o}var r,o;return r=n,(o=[{key:"_cloneTemplate",value:function(){return this.selectTemplate.content.querySelector(".card").cloneNode(!0)}},{key:"_assignEventListeners",value:function(){this._element.querySelector(".card__image").addEventListener("click",this._handleImageClick),this._element.querySelector(".button_type_delete").addEventListener("click",this._handleDelete),this._element.querySelector(".card__like-button").addEventListener("click",this._handleLike)}}])&&e(r.prototype,o),n}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var i=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o(this,"_resetValidation",(function(){var e=r._settings.inputStatus;return r._inputList.forEach((function(t){r._deactivateError(t),t.classList.remove("".concat(e))})),r._controlSubmit(!0),r._element})),o(this,"_deactivateError",(function(e){var t=e.nextElementSibling;t.classList.remove(r._settings.inputErrorActive),t.textContent=""})),o(this,"_activateError",(function(e,t){var n=e.nextElementSibling;n.classList.add(r._settings.inputErrorActive),n.textContent=t})),o(this,"_controlSubmit",(function(e){var t=r._settings,n=t.submitSelector,o=t.disabledButton,i=r._formElement.querySelector(".".concat(n));e?(i.classList.add(o),i.setAttribute("disabled",!0)):(i.classList.remove(o),i.removeAttribute("disabled"))})),o(this,"_checkIfInputValid",(function(e){var t=e.target;t.classList.add(r._settings.inputStatus),t.validity.valid?r._deactivateError(t):r._activateError(t,t.validationMessage);var n=r._inputList.some((function(e){return!e.validity.valid}));return r._controlSubmit(n)})),o(this,"_setEventListeners",(function(){var e=r._settings.formInput;return r._inputList=Array.from(r._formElement.querySelectorAll(".".concat(e))),r._formElement.addEventListener("submit",(function(e){e.preventDefault()})),r._formElement.addEventListener("reset",r._resetValidation),r._inputList.forEach((function(e){e.addEventListener("input",r._checkIfInputValid)})),r._element})),this._settings=n,this._formElement=t}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){return this._setEventListeners()}}])&&r(t.prototype,n),e}(),a=i;function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var l=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_handleEscClose",(function(e){"Escape"===e.code&&(n.close(),n.unsetEventListeners())})),c(this,"_handleBackgroundClose",(function(e){e.target.classList.contains("popup_active")&&n.close()})),this._popup=document.querySelector(t).parentNode}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_active"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_active")}},{key:"setEventListeners",value:function(){this._popup.querySelector(".button_type_close").addEventListener("click",this.close.bind(this)),this._popup.addEventListener("click",this._handleBackgroundClose)}},{key:"unsetEventListeners",value:function(){document.removeEventListener("keydown",this._handleEscClose)}}])&&u(t.prototype,n),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t,n){return d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},d(e,t,n||e)}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function _(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return m(e)}function m(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function a(e,t){var n,r,o,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),u=function(e){Object.entries(e).forEach((function(e,t){var r=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(e,t)||function(e,t){if(e){if("string"==typeof e)return f(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?f(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),o=(r[0],r[1]);n._inputList[t].value=o}))},(o="setInputValues")in(r=m(n=i.call(this,e)))?Object.defineProperty(r,o,{value:u,enumerable:!0,configurable:!0,writable:!0}):r[o]=u,n.handleSubmitForm=t,n._form=n._popup.querySelector(".form"),n._inputList=n._popup.querySelectorAll(".form__input"),n}return t=a,(n=[{key:"close",value:function(){d(y(a.prototype),"close",this).call(this),this._form.reset()}},{key:"getInputValues",value:function(){var e=this;return this._inputValues={},this._inputList.forEach((function(t){e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setEventListeners",value:function(){d(y(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this.handleSubmitForm)}}])&&p(t.prototype,n),a}(l);function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(e,t){return w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},w(e,t)}function x(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return E(e)}function E(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function k(e,t,n){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},k(e,t,n||e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}function L(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return x(this,e)});function a(e){var t,n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),L(E(n=i.call(this,e)),"_handleEscClose",(function(e){switch(e.code){case"ArrowLeft":n._goLeft(),n._toggleArrow(n._leftArrow);break;case"ArrowRight":n._goRight(),n._toggleArrow(n._rightArrow);break;case"Escape":n.close(),k((t=E(n),S(a.prototype)),"unsetEventListeners",t).call(t)}})),L(E(n),"_navigationAssign",(function(e){n.card=e,n._leftCard=e.previousElementSibling||e.parentNode.lastChild,n._rightCard=e.nextElementSibling||e.parentNode.firstChild})),n._leftArrow=n._popup.querySelector(".navigation-arrow_left"),n._rightArrow=n._popup.querySelector(".navigation-arrow_right"),n._imageWindowPhoto=n._popup.querySelector(".popup__img"),n._imageWindowName=n._popup.querySelector(".popup__place-name"),n}return t=a,(n=[{key:"open",value:function(e){k(S(a.prototype),"open",this).call(this),this._navigationAssign(e.target.parentNode)}},{key:"_goLeft",value:function(){this._imageWindowPhoto.src=this._leftCard.querySelector(".card__image").src,this._imageWindowPhoto.alt=this._leftCard.querySelector(".card__image").alt,this._imageWindowName.textContent=this._leftCard.querySelector(".card__text").textContent,this._navigationAssign(this._leftCard)}},{key:"_goRight",value:function(){this._imageWindowPhoto.src=this._rightCard.querySelector(".card__image").src,this._imageWindowPhoto.alt=this._rightCard.querySelector(".card__image").alt,this._imageWindowName.textContent=this._rightCard.querySelector(".card__text").textContent,this._navigationAssign(this._rightCard)}},{key:"_toggleArrow",value:function(e){e.classList.add("navigation-arrow_animated");var t=1e3*parseFloat(getComputedStyle(e).transitionDuration);setTimeout((function(){return e.classList.remove("navigation-arrow_animated")}),t)}},{key:"setEventListeners",value:function(){k(S(a.prototype),"setEventListeners",this).call(this),this._rightArrow.addEventListener("click",this._goRight.bind(this)),this._leftArrow.addEventListener("click",this._goLeft.bind(this))}}])&&g(t.prototype,n),a}(l);function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._tenderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._tenderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&j(t.prototype,n),e}();function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(t),this._job=document.querySelector(n)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._data={name:this._name.textContent,job:this._job.textContent},this._data}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.job;this._name.textContent=t,this._job.textContent=n,this._data=e}}])&&q(t.prototype,n),e}(),P="#w-add",I="#w-edit",B=document.querySelector(".profile__button-edit"),H=document.querySelector(".profile__button-add"),M=document.querySelector(I).querySelector(".form"),V=document.querySelector(P).querySelector(".form"),D={formInput:"form__input",inputStatus:"form__input_status",submitSelector:"button_type_submit",disabledButton:"button_disabled",inputErrorActive:"form__input-error_active"},R=document.querySelector("#card-temp"),T=new A(".profile__name",".profile__job"),W=function(e){var t=new n(e,R,(function(e){Y.open(e)})).createCard();F.addItem(t)},G=new v(I,(function(){T.setUserInfo(G.getInputValues()),G.close()}));G.setEventListeners();var N=new v(P,(function(){var e=N.getInputValues();W(e),N.close()}));N.setEventListeners();var Y=new C("#w-img");Y.setEventListeners(),new a(M,D).enableValidation(),new a(V,D).enableValidation();var F=new O({items:[{name:"Gasadalur, Faroe Islands",link:"https://images.unsplash.com/photo-1520769490916-8c754d52b8e0?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80"},{name:"Vũng Tàu, Ba Ria - Vung Tau, Vietnam",link:"https://images.unsplash.com/photo-1583647515542-f129dd697638?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1955&q=80"},{name:"Torres del Paine National Park, Chile",link:"https://images.unsplash.com/photo-1478827387698-1527781a4887?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1950&q=80"},{name:"Budapest, Hungary",link:"https://images.unsplash.com/photo-1541343672885-9be56236302a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=634&q=80"},{name:"San Quirico d'Orcia, Italy",link:"https://images.unsplash.com/photo-1516108317508-6788f6a160e4?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1834&q=80"},{name:"Lago di Braies, Italy",link:"https://images.unsplash.com/photo-1482192505345-5655af888cc4?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2000&q=80"},{name:"Fujiyoshida, Japan",link:"https://images.unsplash.com/photo-1526481280693-3bfa7568e0f3?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1951&q=80"},{name:"Kyoto, Japan",link:"https://images.unsplash.com/photo-1545569341-9eb8b30979d9?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80"}],renderer:function(e){W(e)}},".locations");F.renderItems(),B.addEventListener("click",(function(){G.setInputValues(T.getUserInfo()),G.open()})),H.addEventListener("click",(function(){return N.open()}));var U=new PopupWithForm(".popup_add-image",{submitHandler:function(e){var t={name:e.imageTitle,link:e.imageLink},r=new n(t,"#image-template",{handleCardClick:openCardPopup});imagesGenerator.addItem(r.generateCard())}});U.setEventListeners(),addImageBtn.addEventListener("click",(function(){return U.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,